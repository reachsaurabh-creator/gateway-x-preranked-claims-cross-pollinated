"""HTML report generation with inline SVG sparklines."""

import html
from typing import List

from .schemas import TimelineItem


def _fmt_pct(x: float) -> str:
    """Format a float as a percentage."""
    try:
        return f"{100.0 * x:.1f}%"
    except Exception:
        return "–"


def _build_convergence_svg(scores: List[float], width: int = 560, height: int = 120, pad: int = 10) -> str:
    """Build an inline SVG sparkline for convergence scores."""
    if not scores:
        return '<svg width="0" height="0" role="img" aria-label="No data"></svg>'
    
    def y(v: float) -> int:
        v = max(0.0, min(1.0, float(v)))
        return pad + int((1.0 - v) * (height - 2 * pad))
    
    def x(i: int) -> int:
        n = len(scores)
        return pad + int(i * (width - 2 * pad) / max(1, n - 1))
    
    pts = " ".join(f"{x(i)},{y(v)}" for i, v in enumerate(scores))
    baseline_y = y(0.5)
    target_y = y(0.9)
    
    return (
        f'<svg width="{width}" height="{height}" viewBox="0 0 {width} {height}" role="img" aria-label="Convergence">'
        f'<rect x="0" y="0" width="{width}" height="{height}" fill="#fff"/>'
        f'<line x1="{pad}" y1="{baseline_y}" x2="{width-pad}" y2="{baseline_y}" stroke="#ddd" stroke-dasharray="4,4"/>'
        f'<line x1="{pad}" y1="{target_y}" x2="{width-pad}" y2="{target_y}" stroke="#e0e0ff" stroke-dasharray="3,3"/>'
        f'<polyline points="{pts}" fill="none" stroke="#2f6fdd" stroke-width="2" vector-effect="non-scaling-stroke" />'
        '</svg>'
    )


def render_timeline_html(run_id: str, items: List[TimelineItem]) -> str:
    """Render a complete HTML report for a consensus timeline."""
    rounds = len(items)
    final_score = items[-1].convergence_score if items else 0.0
    svg = _build_convergence_svg([it.convergence_score for it in items])
    
    # Build table rows
    rows = []
    for it in items:
        chips = ""
        if it.top_claims:
            chips = "<div class='chips'>" + " ".join(
                f"<span class='chip'>{html.escape(cs.cid)} · Tseek Score {_fmt_pct(cs.score)} · CI [{_fmt_pct(cs.ci_low)}–{_fmt_pct(cs.ci_high)}]</span>"
                for cs in it.top_claims[:5]
            ) + "</div>"
        
        rows.append(
            "<tr>"
            f"<td>{it.round_index}</td>"
            f"<td>{_fmt_pct(it.convergence_score)}</td>"
            f"<td>{html.escape(it.best_claim_cid or '—')}</td>"
            f"<td>{html.escape((it.best_claim_text or '—')[:240])}</td>"
            f"<td>{html.escape((it.summary or '—')[:320])}{chips}</td>"
            "</tr>"
        )
    
    return f"""<!doctype html>
<html lang="en"><head>
<meta charset="utf-8"/><meta name="viewport" content="width=device-width,initial-scale=1"/>
<title>Tseek — Run {html.escape(run_id)}</title>
<style>
:root {{ --bg:#fff; --fg:#222; --muted:#666; --line:#e9e9e9; --chip:#f5f7fb; --chipfg:#2f3a4a; }}
body {{ margin:0; padding:24px; font:14px/1.5 system-ui, -apple-system, Segoe UI, Roboto, Arial; color:var(--fg); background:var(--bg); }}
header {{ display:flex; align-items:baseline; gap:12px; margin-bottom:12px; }}
h1 {{ font-size:18px; margin:0; }}
.meta {{ color:var(--muted); font-size:13px; }}
.panel {{ border:1px solid var(--line); border-radius:10px; padding:16px; margin:16px 0; }}
table {{ width:100%; border-collapse:collapse; }}
th,td {{ padding:10px; border-top:1px solid var(--line); text-align:left; vertical-align:top; }}
th {{ background:#fafafa; border-top:none; font-weight:600; }}
.chips {{ margin-top:6px; display:flex; flex-wrap:wrap; gap:6px; }}
.chip {{ padding:4px 8px; border-radius:999px; background:var(--chip); color:var(--chipfg); border:1px solid #e6ecf5; font-size:12px; }}
code {{ background:#fafafa; border:1px solid var(--line); padding:2px 6px; border-radius:6px; }}
footer {{ margin-top: 24px; color: var(--muted); font-size: 12px; }}
</style>
</head><body>
<header>
  <h1>Tseek — Run <code>{html.escape(run_id)}</code></h1>
  <div class="meta">Rounds: <strong>{rounds}</strong> · Final Convergence: <strong>{_fmt_pct(final_score)}</strong></div>
</header>
<section class="panel">
  <div class="meta">Convergence over rounds (grey=50%, blue dotted=90% target)</div>
  {svg}
</section>
<section class="panel">
  <div class="meta">Per-round truth response snapshot</div>
  <table>
    <thead><tr><th style="width:60px;">Round</th><th style="width:120px;">Convergence</th>
      <th style="width:160px;">Best Claim ID</th><th>Best Claim (excerpt)</th><th>Summary & Top Claims</th></tr></thead>
    <tbody>{''.join(rows) if rows else '<tr><td colspan="5">No rounds recorded.</td></tr>'}</tbody>
  </table>
</section>
<footer>Generated by Tseek Timeline Reporter.</footer>
</body></html>"""
